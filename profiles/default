#!/bin/bash

set -ex

. ./profiles/common

install_packages

# Set serverstack defaults, if not already set.
[[ -z "$GATEWAY" ]] && export GATEWAY="10.5.0.1"
[[ -z "$CIDR_EXT" ]] && export CIDR_EXT="10.5.0.0/16"
[[ -z "$FIP_RANGE" ]] && export FIP_RANGE="10.5.150.0:10.5.200.254"
[[ -z "$NAMESERVER" ]] && export NAMESERVER="10.245.168.6"
[[ -z "$CIDR_PRIV" ]] && export CIDR_PRIV="192.168.21.0/24"
[[ -z "$SWIFT_IP" ]] && export SWIFT_IP="10.245.161.162"

# Accept network type as first parameter, assume gre if unspecified
net_type=${1:-"gre"}

# If not on bare metal, add extra port to overcloud neutron-gateway and configure charm to use it
if [[ "${BARE_METAL^^}" != "TRUE" ]]; then
    source ~/novarc
    ./bin/post-deploy-config neutron-gateway
fi

# Configure neutron networking on overcloud
source openrc 
./bin/neutron-ext-net --network-type flat -g $GATEWAY -c $CIDR_EXT -f $FIP_RANGE ext_net
./bin/neutron-tenant-net --network-type $net_type -t admin -r provider-router -N $NAMESERVER private $CIDR_PRIV

upload_image cloudimages xenial xenial-server-cloudimg-amd64-disk1.img
upload_image cloudimages trusty trusty-server-cloudimg-amd64-disk1.img
upload_image cloudimages precise precise-server-cloudimg-amd64-disk1.img
upload_image swift cirros cirros-0.3.4-x86_64-disk.img
upload_image swift cirros2 cirros-0.3.4-x86_64-disk.img

image_id=$(openstack image list | awk '/cirros\s/ {print $2}')
image_alt_id=$(openstack image list | awk '/cirros2\s/ {print $2}')

create_tempest_users

access=$(openstack --os-username demo --os-password pass --os-tenant-name demo ec2 credentials create | grep access | awk '{ print $4 }')
secret=$(openstack ec2 credentials show $access | grep secret | awk '{ print $4 }')

create_tempest_flavors
create_default_flavors

# Gather vars for tempest template
ext_net=$(neutron net-list | grep ext_net | awk '{ print $2 }')
router=$(neutron router-list | grep provider-router | awk '{ print $2}')
keystone=$(juju-deployer -f keystone)
dashboard=$(juju-deployer -f openstack-dashboard)
ncc=$(juju-deployer -f nova-cloud-controller)
http=${OS_AUTH_PROTOCOL:-http}

# Insert vars into tempest conf
sed -e "s/__IMAGE_ID__/$image_id/g" -e "s/__IMAGE_ALT_ID__/$image_alt_id/g" \
    -e "s/__DASHBOARD__/$dashboard/g" -e "s/__KEYSTONE__/$keystone/g" \
    -e "s/__EXT_NET__/$ext_net/g" -e "s/__PROTO__/$http/g" \
    -e "s/__SWIFT__/$SWIFT_IP/g" \
    -e "s/__NAMESERVER__/$NAMESERVER/g" \
    -e "s/__CIDR_PRIV__/${CIDR_PRIV////\\/}/g" \
    -e "s/__NCC__/$ncc/g" -e "s/__SECRET__/$secret/g" -e "s/__ACCESS__/$access/g" \
    templates/tempest/tempest.conf.template > tempest.conf

sed -e "s/__IMAGE_ID__/$image_id/g" -e "s/__IMAGE_ALT_ID__/$image_alt_id/g" \
    -e "s/__DASHBOARD__/$dashboard/g" -e "s/__KEYSTONE__/$keystone/g" \
    -e "s/__EXT_NET__/$ext_net/g" -e "s/__PROTO__/$http/g" \
    -e "s/__SWIFT__/$SWIFT_IP/g" \
    -e "s/__NAMESERVER__/$NAMESERVER/g" \
    -e "s/__CIDR_PRIV__/${CIDR_PRIV////\\/}/g" \
    -e "s/__NCC__/$ncc/g" -e "s/__SECRET__/$secret/g" -e "s/__ACCESS__/$access/g" \
    templates/tempest/tempest.refstack.template.conf > tempest_refstack.conf

# Git tempest, place the rendered tempest template
[ -d tempest ] || git clone https://github.com/openstack/tempest
# Checkout latest commit that included run_tempest.sh. This is a stop-gap until
# OSCI uses tempest charm or switches to new style of executing tempest tests.
git --git-dir=tempest/.git --work-tree=tempest checkout f2ba23f7834facb2bfe7c376840e7630881d1bf9
cp tempest.conf tempest/etc
