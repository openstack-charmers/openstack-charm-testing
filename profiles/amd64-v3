#!/bin/bash

set -ex
. ./profiles/common
# See also requirements.txt in tempest (probably need to sudo pip install -r requirements.txt)
#sudo apt-get install git testrepository subunit python-nose python-lxml python-boto \
#    python-junitxml python-subunit python-testresources python-oslotest python-stevedore \
#    python-cinderclient python-glanceclient python-heatclient python-keystoneclient \
#    python-neutronclient python-novaclient python-swiftclient python-ceilometerclient \
#    openvswitch-test openvswitch-common -y

[[ -z "$GATEWAY" ]] && export GATEWAY="10.245.168.1"
[[ -z "$CIDR_EXT" ]] && export CIDR_EXT="10.245.168.0/21"
[[ -z "$FIP_RANGE" ]] && export FIP_RANGE="10.245.171.0:10.245.171.255"
[[ -z "$NAMESERVER" ]] && export NAMESERVER="10.245.168.6"
[[ -z "$CIDR_PRIV" ]] && export CIDR_PRIV="172.16.0.0/22"
[[ -z "$SWIFT_IP" ]] && export SWIFT_IP="10.245.161.162"

# Accept network type as first parameter, assume gre if unspecified
net_type=${1:-"gre"}

# Configure neutron networking on overcloud
source rcs/openrc
./bin/neutron-ext-net-ksv3 --project admin --network-type flat -g $GATEWAY -c $CIDR_EXT -f $FIP_RANGE ext_net
./bin/neutron-tenant-net-ksv3 --project admin --network-type $net_type -r provider-router -N $NAMESERVER private $CIDR_PRIV
ext_net=$(openstack network list | awk '/ext_net/ {print $2}')

# Create demo/testing users, tenants and flavor
openstack project show --domain admin_domain demo || \
	openstack project create --domain admin_domain demo
openstack user show --domain admin_domain demo || \
	openstack user create --project-domain admin_domain --project demo \
	--password pass --enable --email demo@dev.null \
	--domain admin_domain demo
openstack role show Member || openstack role create Member
openstack role add --user-domain admin_domain --user demo \
	--project-domain admin_domain --project demo Member
openstack project show --domain admin_domain alt_demo || \
	openstack project create --domain admin_domain alt_demo
openstack user show --domain admin_domain alt_demo || \
	openstack user create --project-domain admin_domain --project alt_demo \
	--password secret --enable --email alt_demo@dev.null \
	--domain admin_domain alt_demo
openstack role add --user-domain admin_domain --user alt_demo \
	--project-domain admin_domain --project alt_demo Member
access=$(openstack ec2 credentials create --user-domain admin_domain \
	--user demo --project-domain admin_domain --project demo \
       | awk '/access/ {print $4}')
secret=$(openstack ec2 credentials show $access  | awk '/secret/ {print $4}')

# Download images if not already present
tools/images_amd64.sh

# Run Sec Groups
tools/sec_groups.sh

echo "Flavors"
openstack flavor show m1.cirros || openstack flavor create --id 6 --ram 64 --disk 1 --vcpus 1 m1.cirros
openstack flavor show m1.tempest || openstack flavor create --id 7 --ram 256 --disk 5 --vcpus 1 m1.tempest
openstack flavor show m2.tempest || openstack flavor create --id 8 --ram 512 --disk 5 --vcpus 1 m2.tempest
create_default_flavors

echo "Quotas"
tools/quota_million.sh

echo "Tempest"
router=$(neutron --os-project-name admin router-list | grep provider-router | awk '{ print $2}')
# Gather vars for tempest template
keystone_unit=$(juju status keystone|grep -i workload -A1|tail -n1|awk '{print $1}'|tr -d '*')
dashboard_unit=$(juju status openstack-dashboard|grep -i workload -A1|tail -n1|awk '{print $1}'|tr -d '*')
ncc_unit=$(juju status nova-cloud-controller|grep -i workload -A1|tail -n1|awk '{print $1}'|tr -d '*')
keystone=$(juju run --unit ${keystone_unit} "unit-get private-address")
dashboard=$(juju run --unit ${dashboard_unit} "unit-get private-address")
ncc=$(juju run --unit ${ncc_unit} "unit-get private-address")
http=${OS_AUTH_PROTOCOL:-http}
default_domain_id=$(openstack domain list | awk '/default/ {print $2}')

# Insert vars into tempest conf
sed -e "s/__IMAGE_ID__/$image_id/g" -e "s/__IMAGE_ALT_ID__/$image_alt_id/g" \
    -e "s/__DASHBOARD__/$dashboard/g" -e "s/__KEYSTONE__/$keystone/g" \
    -e "s/__EXT_NET__/$ext_net/g" -e "s/__PROTO__/$http/g" \
    -e "s/__SWIFT__/$SWIFT_IP/g" \
    -e "s/__NAMESERVER__/$NAMESERVER/g" \
    -e "s/__CIDR_PRIV__/${CIDR_PRIV////\\/}/g" \
    -e "s/__NCC__/$ncc/g" -e "s/__SECRET__/$secret/g" -e "s/__ACCESS__/$access/g" \
    -e "s/__DEFAULT_DOMAIN_ID__/$default_domain_id/g" \
    templates/tempest/tempest-v3.conf.template > tempest.conf

# Git tempest, place the rendered tempest template
[ -d tempest ] || git clone https://github.com/openstack/tempest
git --git-dir=tempest/.git --work-tree=tempest checkout master
git --git-dir=tempest/.git --work-tree=tempest pull
cp tempest.conf tempest/etc
cp templates/tempest/accounts.yaml tempest/etc
