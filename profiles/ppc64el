#!/bin/bash -ex
# An experimental configuration script for configuring a ppc64el OpenStack test cloud.
# Useful in manual deployment testing.

# Install CLI tools
#sudo apt-get install git testrepository subunit python-nose python-lxml python-boto \
#    python-junitxml python-subunit python-testresources python-oslotest python-stevedore \
#    python-cinderclient python-glanceclient python-heatclient python-keystoneclient \
#    python-neutronclient python-novaclient python-swiftclient python-ceilometerclient \
#    openvswitch-test openvswitch-common python-openstackclient -y

. ./profiles/common

# Set "dellstack" network parameters, if not already set.  Adjust to fit your environment.
[[ -z "$GATEWAY" ]] && export GATEWAY="10.245.168.1"
[[ -z "$CIDR_EXT" ]] && export CIDR_EXT="10.245.168.0/21"
[[ -z "$FIP_RANGE" ]] && export FIP_RANGE="10.245.173.0:10.245.173.255"
[[ -z "$NAMESERVER" ]] && export NAMESERVER="10.245.168.6"
[[ -z "$CIDR_PRIV" ]] && export CIDR_PRIV="172.16.0.0/22"

# Accept network type as first parameter, assume gre if unspecified
net_type=${1:-"gre"}

# Configure neutron networking on overcloud
source rcs/openrc
./bin/neutron-ext-net --network-type flat -g $GATEWAY -c $CIDR_EXT -f $FIP_RANGE ext_net
./bin/neutron-tenant-net --network-type $net_type -t admin -r provider-router -N $NAMESERVER private $CIDR_PRIV

# Create demo user and tenant
keystone tenant-create --name demo || :
keystone user-create --name demo --tenant demo --pass pass --enabled true --email demo@dev.null || :
keystone user-role-add --user demo --role Member --tenant demo || :
keystone tenant-create --name alt_demo || :
keystone user-create --name alt_demo --tenant alt_demo --pass secret --enabled true --email alt_demo@dev.null || :
keystone user-role-add --user alt_demo --role Member --tenant alt_demo || :

# Install monitoring, probing and troubleshooting tools on all units
juju run --all "sudo apt-get install htop atop nload iptraf nmap multitail iperf pastebinit stress sysstat -y"

# Load images into glance
tools/images_ppc64el.sh

# Set security groups and rules
tools/sec_groups.sh

# Tune for higher-density testing
#tools/flavor_shrink.sh
openstack flavor show m1.cirros || openstack flavor create --id 6 --ram 64 --disk 1 --vcpus 1 m1.cirros
openstack flavor show m1.tempest || openstack flavor create --id 7 --ram 256 --disk 5 --vcpus 1 m1.tempest
openstack flavor show m2.tempest || openstack flavor create --id 8 --ram 512 --disk 5 --vcpus 1 m2.tempest
create_default_flavors

tools/quota_million.sh
